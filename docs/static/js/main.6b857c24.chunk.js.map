{"version":3,"sources":["bread.tsx","test.tsx","cmd.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["BreadcrumbBasicExample","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","_onBreadcrumbItemClicked","ev","item","console","log","key","inherits","createClass","value","react","Breadcrumb","items","text","href","onClick","isCurrentItem","maxDisplayedItems","overflowIndex","overflowAriaLabel","ariaLabel","React","classNames","mergeStyleSets","fileIconHeaderIcon","padding","fontSize","fileIconCell","textAlign","selectors","&:before","content","display","verticalAlign","height","width","visibility","fileIconImg","maxHeight","maxWidth","selectionDetails","marginBottom","fileList","@media(min-width: 1024px)","@media(min-width: 1366px)","@media(min-width: 1920px)","DetailsListDocumentsExample","props","_selection","_allItems","_showDialog","assertThisInitialized","setState","hideDialog","_closeDialog","_onChangeText","filter","i","name","toLowerCase","indexOf","_onColumnClick","column","_this$state","state","columns","newColumns","slice","currColumn","currCol","forEach","newCol","isSortedDescending","isSorted","newItems","columnKey","sort","a","b","_copyAndSort","fieldName","randomDate","_randomDate","Date","randomFileSize","_randomFileSize","randomFileType","_randomFileIcon","fileName","_lorem","charAt","toUpperCase","docType","userName","split","map","join","push","iconName","url","fileType","modifiedBy","dateModified","dateFormatted","dateModifiedValue","fileSize","fileSizeRaw","rawSize","_generateDocuments","className","iconClassName","isIconOnly","minWidth","onColumnClick","onRender","src","alt","isRowHeader","isResizable","sortAscendingAriaLabel","sortDescendingAriaLabel","data","isPadded","isCollapsible","IconButton","iconProps","menuIconProps","role","aria-haspopup","aria-label","menuProps","Selection","onSelectionChanged","_getSelectionDetails","isModalSelection","isCompactMode","loaded","_this2","setTimeout","_this$state2","Fabric","Stack","StackItem","align","MessageBar","messageBarType","MessageBarType","info","bread_BreadcrumbBasicExample","MarqueeSelection","selection","ShimmeredDetailsList","enableShimmer","compact","selectionMode","SelectionMode","multiple","none","setKey","layoutMode","DetailsListLayoutMode","justified","isHeaderVisible","selectionPreservedOnEmptyClick","onItemInvoked","_onItemInvoked","enterModalSelectionOnTouch","ariaLabelForSelectionColumn","ariaLabelForSelectAllCheckbox","Dialog","hidden","onDismiss","dialogContentProps","type","DialogType","normal","title","subText","modalProps","isBlocking","DialogFooter","PrimaryButton","DefaultButton","previousProps","previousState","setAllSelected","alert","selectionCount","getSelectedCount","getSelection","start","end","date","getTime","Math","random","valueOf","toLocaleDateString","FILE_ICONS","floor","LOREM_IPSUM","loremIndex","wordCount","startIndex","Cmd","inputOpenFileRef","_showModal","showModal","_hideModal","_showMessageBar","showMessageBar","_hideMessageBar","current","click","CommandBar","clickUpload","bind","ref","style","farItems","subMenuProps","target","success","App","Customizer","FluentCustomizations","cmd_Cmd","test_DetailsListDocumentsExample","Boolean","window","location","hostname","match","initializeIcons","ReactDOM","render","react_default","createElement","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6b857c24.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { Breadcrumb, IBreadcrumbItem } from 'office-ui-fabric-react/lib/Breadcrumb';\r\nexport class BreadcrumbBasicExample extends React.Component<any, any> {\r\n    // constructor(props: {}) {\r\n    //     super(props);\r\n    // }\r\n\r\n    public render(): JSX.Element {\r\n        return (\r\n            <div>\r\n                <Breadcrumb\r\n                    items={[\r\n                        { text: '我的文档', key: 'TestKey0', href:\"#\", onClick: this._onBreadcrumbItemClicked },\r\n                        { text: '文件夹1', key: 'TestKey1', href:\"#\", onClick: this._onBreadcrumbItemClicked },\r\n                        { text: '文件夹2', key: 'TestKey2', href:\"#\", onClick: this._onBreadcrumbItemClicked },\r\n                        { text: '文件夹3', key: 'TestKey3', href:\"#\", onClick: this._onBreadcrumbItemClicked },\r\n                        { text: '文件夹4', key: 'TestKey4', href:\"#\", onClick: this._onBreadcrumbItemClicked },\r\n                        { text: '文件夹5', key: 'TestKey5', href:\"#\", onClick: this._onBreadcrumbItemClicked, isCurrentItem: true }\r\n                    ]}\r\n                    maxDisplayedItems={3}\r\n                    overflowIndex={1}\r\n                    overflowAriaLabel={'More items'}\r\n                    ariaLabel={'Breadcrumb with maxDisplayedItems set to two and overflowIndex set to 1'}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _onBreadcrumbItemClicked = (ev?: React.MouseEvent<HTMLElement>, item?: IBreadcrumbItem): void => {\r\n        console.log(`Breadcrumb item with key \"${item!.key}\" has been clicked.`);\r\n    };\r\n}","import * as React from 'react';\r\nimport { Fabric } from 'office-ui-fabric-react/lib/Fabric';\r\nimport { DetailsListLayoutMode, Selection, SelectionMode, IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\r\nimport { mergeStyleSets } from 'office-ui-fabric-react/lib/Styling';\r\nimport { BreadcrumbBasicExample } from './bread';\r\nimport { ShimmeredDetailsList } from 'office-ui-fabric-react/lib/ShimmeredDetailsList';\r\nimport { IconButton, PrimaryButton, DefaultButton } from 'office-ui-fabric-react/lib/Button';\r\nimport Dialog, { DialogFooter, DialogType } from 'office-ui-fabric-react/lib/Dialog';\r\nimport { MessageBar, MessageBarType } from 'office-ui-fabric-react/lib/MessageBar';\r\nimport { Stack, StackItem } from 'office-ui-fabric-react';\r\n\r\nconst classNames = mergeStyleSets({\r\n    fileIconHeaderIcon: {\r\n        padding: 0,\r\n        fontSize: '16px'\r\n    },\r\n    fileIconCell: {\r\n        textAlign: 'center',\r\n        selectors: {\r\n            '&:before': {\r\n                content: '.',\r\n                display: 'inline-block',\r\n                verticalAlign: 'middle',\r\n                height: '100%',\r\n                width: '0px',\r\n                visibility: 'hidden'\r\n            }\r\n        }\r\n    },\r\n    fileIconImg: {\r\n        verticalAlign: 'middle',\r\n        maxHeight: '16px',\r\n        maxWidth: '16px'\r\n    },\r\n    selectionDetails: {\r\n        marginBottom: '20px'\r\n    },\r\n    fileList: {\r\n        width: \"100%\",\r\n        selectors: {\r\n            '@media(min-width: 1024px)': {\r\n                width: \"90%\"\r\n            },\r\n            '@media(min-width: 1366px)': {\r\n                width: \"80%\"\r\n            },\r\n            '@media(min-width: 1920px)': {\r\n                width: 1200\r\n            }\r\n        }\r\n    }\r\n});\r\nexport interface IDetailsListDocumentsExampleState {\r\n    columns: IColumn[];\r\n    items: IDocument[];\r\n    selectionDetails: string;\r\n    isModalSelection: boolean;\r\n    isCompactMode: boolean;\r\n    loaded: boolean;\r\n    hideDialog: boolean;\r\n}\r\n\r\nexport interface IDocument {\r\n    name: string;\r\n    value: string;\r\n    iconName: string;\r\n    fileType: string;\r\n    modifiedBy: string;\r\n    dateModified: string;\r\n    dateModifiedValue: number;\r\n    fileSize: string;\r\n    fileSizeRaw: number;\r\n}\r\n\r\nexport class DetailsListDocumentsExample extends React.Component<{}, IDetailsListDocumentsExampleState> {\r\n    private _selection: Selection;\r\n    private _allItems: IDocument[];\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n\r\n        this._allItems = _generateDocuments();\r\n\r\n        const columns: IColumn[] = [\r\n            {\r\n                key: 'column1',\r\n                name: '文件类型',\r\n                className: classNames.fileIconCell,\r\n                iconClassName: classNames.fileIconHeaderIcon,\r\n                ariaLabel: 'Column operations for File type, Press to sort on File type',\r\n                iconName: 'Page',\r\n                isIconOnly: true,\r\n                fieldName: 'name',\r\n                minWidth: 16,\r\n                maxWidth: 16,\r\n                onColumnClick: this._onColumnClick,\r\n                onRender: (item: IDocument) => {\r\n                    return <img src={item.iconName} className={classNames.fileIconImg} alt={item.fileType + ' file icon'} />;\r\n                }\r\n            },\r\n            {\r\n                key: 'column2',\r\n                name: '文件名',\r\n                fieldName: 'name',\r\n                minWidth: 150,\r\n                maxWidth: 500,\r\n                isRowHeader: true,\r\n                isResizable: true,\r\n                isSorted: true,\r\n                isSortedDescending: false,\r\n                sortAscendingAriaLabel: 'Sorted A to Z',\r\n                sortDescendingAriaLabel: 'Sorted Z to A',\r\n                onColumnClick: this._onColumnClick,\r\n                data: 'string',\r\n                isPadded: true\r\n            },\r\n            {\r\n                key: 'column3',\r\n                name: '修改日期',\r\n                fieldName: 'dateModifiedValue',\r\n                minWidth: 70,\r\n                maxWidth: 100,\r\n                isResizable: true,\r\n                onColumnClick: this._onColumnClick,\r\n                data: 'number',\r\n                onRender: (item: IDocument) => {\r\n                    return <span>{item.dateModified}</span>;\r\n                },\r\n                isPadded: true\r\n            },\r\n            {\r\n                key: 'column4',\r\n                name: '作者',\r\n                fieldName: 'modifiedBy',\r\n                minWidth: 70,\r\n                maxWidth: 100,\r\n                isResizable: true,\r\n                isCollapsible: true,\r\n                data: 'string',\r\n                onColumnClick: this._onColumnClick,\r\n                onRender: (item: IDocument) => {\r\n                    return <span>{item.modifiedBy}</span>;\r\n                },\r\n                isPadded: true\r\n            },\r\n            {\r\n                key: 'column5',\r\n                name: '文件大小',\r\n                fieldName: 'fileSizeRaw',\r\n                minWidth: 70,\r\n                maxWidth: 90,\r\n                isResizable: true,\r\n                isCollapsible: true,\r\n                data: 'number',\r\n                onColumnClick: this._onColumnClick,\r\n                onRender: (item: IDocument) => {\r\n                    return <span>{item.fileSize}</span>;\r\n                }\r\n            },\r\n            {\r\n                key: 'column6',\r\n                name: '操作',\r\n                minWidth: 90,\r\n                maxWidth: 120,\r\n                isResizable: false,\r\n                isCollapsible: false,\r\n                data: 'number',\r\n                onRender: (item: IDocument) => {\r\n                    return <div>\r\n                        <IconButton onClick={this._showDialog} iconProps={{ iconName: \"CloudDownload\" }} />\r\n                        <IconButton\r\n                            menuIconProps={{ iconName: 'MoreVertical' }}\r\n                            role=\"button\"\r\n                            aria-haspopup={true}\r\n                            aria-label=\"Show actions\"\r\n                            menuProps={{\r\n                                items: [\r\n                                    {\r\n                                        key: 'delete',\r\n                                        text: '删除',\r\n                                        //   onClick: () => this._deleteItem(index)\r\n                                    },\r\n                                    {\r\n                                        key: 'rename',\r\n                                        text: '重命名',\r\n                                        //   onClick: () => this._renameItem(item, index)\r\n                                    },\r\n                                    {\r\n                                        key: 'voice',\r\n                                        text: '文档录音',\r\n                                        //   onClick: () => this._renameItem(item, index)\r\n                                    },\r\n                                    {\r\n                                        key: 'doc',\r\n                                        text: '手机上查看',\r\n                                        //   onClick: () => this._renameItem(item, index)\r\n                                    },\r\n                                ]\r\n                            }}\r\n                        />\r\n                    </div>;\r\n                }\r\n            }\r\n        ];\r\n\r\n        this._selection = new Selection({\r\n            onSelectionChanged: () => {\r\n                this.setState({\r\n                    selectionDetails: this._getSelectionDetails()\r\n                });\r\n            }\r\n        });\r\n\r\n        this.state = {\r\n            items: [],\r\n            columns: columns,\r\n            selectionDetails: this._getSelectionDetails(),\r\n            isModalSelection: true,\r\n            isCompactMode: false,\r\n            loaded: false,\r\n            hideDialog: true,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() =>\r\n            this.setState({\r\n                'items': this._allItems,\r\n                loaded: true,\r\n            }), 1000);\r\n    }\r\n    public render() {\r\n        const { columns, isCompactMode, items, selectionDetails, isModalSelection, loaded } = this.state;\r\n\r\n        return (\r\n            <Fabric>\r\n                <Stack maxWidth=\"100%\">\r\n                    <StackItem align=\"auto\">\r\n                        {selectionDetails && <MessageBar messageBarType={MessageBarType.info}>{selectionDetails}</MessageBar>}\r\n                    </StackItem>\r\n                    <StackItem align=\"center\" className={classNames.fileList}>\r\n                        <BreadcrumbBasicExample></BreadcrumbBasicExample>\r\n                        <MarqueeSelection selection={this._selection}>\r\n                            <ShimmeredDetailsList\r\n                                enableShimmer={!loaded}\r\n                                items={items}\r\n                                compact={isCompactMode}\r\n                                columns={columns}\r\n                                selectionMode={isModalSelection ? SelectionMode.multiple : SelectionMode.none}\r\n                                setKey=\"set\"\r\n                                layoutMode={DetailsListLayoutMode.justified}\r\n                                isHeaderVisible={true}\r\n                                selection={this._selection}\r\n                                selectionPreservedOnEmptyClick={true}\r\n                                onItemInvoked={this._onItemInvoked}\r\n                                enterModalSelectionOnTouch={true}\r\n                                ariaLabelForSelectionColumn=\"Toggle selection\"\r\n                                ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n                            />\r\n                        </MarqueeSelection>\r\n                    </StackItem>\r\n                </Stack>\r\n                <Dialog\r\n                    hidden={this.state.hideDialog}\r\n                    onDismiss={this._closeDialog}\r\n                    dialogContentProps={{\r\n                        type: DialogType.normal,\r\n                        title: '下载',\r\n                        subText: '保存此文件到电脑?'\r\n                    }}\r\n                    modalProps={{\r\n                        isBlocking: true\r\n                    }}\r\n                >\r\n                    <DialogFooter>\r\n                        <PrimaryButton onClick={this._closeDialog} text=\"保存\" />\r\n                        <DefaultButton onClick={this._closeDialog} text=\"取消\" />\r\n                    </DialogFooter>\r\n                </Dialog>\r\n            </Fabric>\r\n        );\r\n    }\r\n\r\n    public componentDidUpdate(previousProps: any, previousState: IDetailsListDocumentsExampleState) {\r\n        if (previousState.isModalSelection !== this.state.isModalSelection && !this.state.isModalSelection) {\r\n            this._selection.setAllSelected(false);\r\n        }\r\n    }\r\n\r\n    private _showDialog = (): void => {\r\n        console.log(this);\r\n        this.setState({ hideDialog: false });\r\n    };\r\n\r\n    private _closeDialog = (): void => {\r\n        this.setState({ hideDialog: true });\r\n    };\r\n\r\n    private _onChangeText = (ev: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>, text?: string): void => {\r\n        this.setState({\r\n            items: text ? this._allItems.filter(i => i.name.toLowerCase().indexOf(text) > -1) : this._allItems\r\n        });\r\n    };\r\n\r\n    private _onItemInvoked(item: any): void {\r\n        alert(`Item invoked: ${item.name}`);\r\n    }\r\n\r\n    private _getSelectionDetails(): string {\r\n        const selectionCount = this._selection.getSelectedCount();\r\n\r\n        switch (selectionCount) {\r\n            case 0:\r\n                return '';\r\n            case 1:\r\n                return '1 item selected: ' + (this._selection.getSelection()[0] as IDocument).name;\r\n            default:\r\n                return `${selectionCount} items selected`;\r\n        }\r\n    }\r\n\r\n    private _onColumnClick = (ev: React.MouseEvent<HTMLElement>, column: IColumn): void => {\r\n        const { columns, items } = this.state;\r\n        const newColumns: IColumn[] = columns.slice();\r\n        const currColumn: IColumn = newColumns.filter(currCol => column.key === currCol.key)[0];\r\n        newColumns.forEach((newCol: IColumn) => {\r\n            if (newCol === currColumn) {\r\n                currColumn.isSortedDescending = !currColumn.isSortedDescending;\r\n                currColumn.isSorted = true;\r\n            } else {\r\n                newCol.isSorted = false;\r\n                newCol.isSortedDescending = true;\r\n            }\r\n        });\r\n        const newItems = _copyAndSort(items, currColumn.fieldName!, currColumn.isSortedDescending);\r\n        this.setState({\r\n            columns: newColumns,\r\n            items: newItems\r\n        });\r\n    };\r\n}\r\n\r\nfunction _copyAndSort<T>(items: T[], columnKey: string, isSortedDescending?: boolean): T[] {\r\n    const key = columnKey as keyof T;\r\n    return items.slice(0).sort((a: T, b: T) => ((isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1));\r\n}\r\n\r\nfunction _generateDocuments() {\r\n    const items: IDocument[] = [];\r\n    for (let i = 0; i < 500; i++) {\r\n        const randomDate = _randomDate(new Date(2012, 0, 1), new Date());\r\n        const randomFileSize = _randomFileSize();\r\n        const randomFileType = _randomFileIcon();\r\n        let fileName = _lorem(2);\r\n        fileName = fileName.charAt(0).toUpperCase() + fileName.slice(1).concat(`.${randomFileType.docType}`);\r\n        let userName = _lorem(2);\r\n        userName = userName\r\n            .split(' ')\r\n            .map((name: string) => name.charAt(0).toUpperCase() + name.slice(1))\r\n            .join(' ');\r\n        items.push({\r\n            name: fileName,\r\n            value: fileName,\r\n            iconName: randomFileType.url,\r\n            fileType: randomFileType.docType,\r\n            modifiedBy: userName,\r\n            dateModified: randomDate.dateFormatted,\r\n            dateModifiedValue: randomDate.value,\r\n            fileSize: randomFileSize.value,\r\n            fileSizeRaw: randomFileSize.rawSize\r\n        });\r\n    }\r\n    return items;\r\n}\r\n\r\nfunction _randomDate(start: Date, end: Date): { value: number; dateFormatted: string } {\r\n    const date: Date = new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r\n    return {\r\n        value: date.valueOf(),\r\n        dateFormatted: date.toLocaleDateString()\r\n    };\r\n}\r\n\r\nconst FILE_ICONS: { name: string }[] = [\r\n    { name: 'accdb' },\r\n    { name: 'csv' },\r\n    { name: 'docx' },\r\n    { name: 'dotx' },\r\n    { name: 'mpt' },\r\n    { name: 'odt' },\r\n    { name: 'one' },\r\n    { name: 'onepkg' },\r\n    { name: 'onetoc' },\r\n    { name: 'pptx' },\r\n    { name: 'pub' },\r\n    { name: 'vsdx' },\r\n    { name: 'xls' },\r\n    { name: 'xlsx' },\r\n    { name: 'xsn' }\r\n];\r\n\r\nfunction _randomFileIcon(): { docType: string; url: string } {\r\n    const docType: string = FILE_ICONS[Math.floor(Math.random() * FILE_ICONS.length)].name;\r\n    return {\r\n        docType,\r\n        url: `https://static2.sharepointonline.com/files/fabric/assets/brand-icons/document/svg/${docType}_16x1.svg`\r\n    };\r\n}\r\n\r\nfunction _randomFileSize(): { value: string; rawSize: number } {\r\n    const fileSize: number = Math.floor(Math.random() * 100) + 30;\r\n    return {\r\n        value: `${fileSize} KB`,\r\n        rawSize: fileSize\r\n    };\r\n}\r\n\r\nconst LOREM_IPSUM = (\r\n    'lorem ipsum dolor sit amet consectetur adipiscing elit sed do eiusmod tempor incididunt ut ' +\r\n    'labore et dolore magna aliqua ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi ut ' +\r\n    'aliquip ex ea commodo consequat duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore ' +\r\n    'eu fugiat nulla pariatur excepteur sint occaecat cupidatat non proident sunt in culpa qui officia deserunt '\r\n).split(' ');\r\nlet loremIndex = 0;\r\nfunction _lorem(wordCount: number): string {\r\n    const startIndex = loremIndex + wordCount > LOREM_IPSUM.length ? 0 : loremIndex;\r\n    loremIndex = startIndex + wordCount;\r\n    return LOREM_IPSUM.slice(startIndex, loremIndex).join(' ');\r\n}","import * as React from 'react';\r\nimport { CommandBar } from 'office-ui-fabric-react/lib/CommandBar';\r\nimport { MessageBar, MessageBarType } from 'office-ui-fabric-react/lib/MessageBar';\r\nimport { RefObject } from 'react';\r\n\r\nexport interface IKeytipsCommandBarExampleState {\r\n    showModal: boolean;\r\n    showMessageBar: boolean;\r\n}\r\n\r\nexport class Cmd extends React.Component<{}, IKeytipsCommandBarExampleState> {\r\n    private readonly inputOpenFileRef: RefObject<HTMLInputElement>\r\n\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.inputOpenFileRef = React.createRef()\r\n        this.state = {\r\n            showModal: false,\r\n            showMessageBar: false\r\n        };\r\n    }\r\n\r\n    private clickUpload() {\r\n        if (this.inputOpenFileRef.current) {\r\n            this.inputOpenFileRef.current.click()\r\n        }\r\n    }\r\n    /* tslint:disable:jsx-ban-props jsx-no-lambda */\r\n    public render() {\r\n        return (\r\n            <div>\r\n                <CommandBar\r\n                    items={[\r\n                        {\r\n                            key: 'commandBarItem2',\r\n                            text: '刷新',\r\n                            iconProps: {\r\n                                iconName: 'Refresh'\r\n                            },\r\n                            onClick: this._showMessageBar,\r\n                        },\r\n                        {\r\n                            key: 'commandBarItem1',\r\n                            text: '上传',\r\n                            iconProps: {\r\n                                iconName: 'Upload'\r\n                            },\r\n                            onClick: this.clickUpload.bind(this),\r\n                            // onRender: () => <input ref={this.inputOpenFileRef} style={{ display: \"none\" }} type=\"file\" />\r\n\r\n                        },\r\n                        {\r\n                            key: \"upload-dummy\",\r\n                            // name: \"Upload xml Document\",\r\n                            onRender: () => <input ref={this.inputOpenFileRef} style={{ display: \"none\" }} type=\"file\" />\r\n                        }\r\n\r\n                    ]}\r\n                    farItems={[\r\n                        {\r\n                            key: 'farItem1',\r\n                            text: 'Options',\r\n                            iconProps: {\r\n                                iconName: 'SortLines'\r\n                            },\r\n                            subMenuProps: {\r\n                                items: [\r\n                                    {\r\n                                        key: 'emailMessage',\r\n                                        text: 'Send Email',\r\n                                        iconProps: {\r\n                                            iconName: 'Mail'\r\n                                        },\r\n                                        onClick: () => {\r\n                                            console.log('test1');\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        key: 'calendarEvent',\r\n                                        text: 'Make Calendar Event',\r\n                                        iconProps: {\r\n                                            iconName: 'Calendar'\r\n                                        },\r\n                                        onClick: () => {\r\n                                            console.log('test2');\r\n                                        },\r\n                                        subMenuProps: {\r\n                                            items: [\r\n                                                {\r\n                                                    key: 'testButton',\r\n                                                    text: 'Add to Outlook',\r\n                                                    onClick: () => {\r\n                                                        console.log('test3');\r\n                                                    }\r\n                                                },\r\n                                                {\r\n                                                    key: 'testButton2',\r\n                                                    text: 'Go to Bing',\r\n                                                    href: 'http://www.bing.com',\r\n                                                    target: '_blank'\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    },\r\n                                    {\r\n                                        key: 'splitButtonTest',\r\n                                        text: 'Other...',\r\n                                        split: true,\r\n                                        subMenuProps: {\r\n                                            items: [\r\n                                                {\r\n                                                    key: 'splitButtonSubMenu1',\r\n                                                    text: 'Submenu Item w/o Keytip'\r\n                                                },\r\n                                                {\r\n                                                    key: 'splitButtonSubMenu2',\r\n                                                    text: 'Submenu Item w/o Keytip'\r\n                                                }\r\n                                            ]\r\n                                        }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        }\r\n                    ]}\r\n                />\r\n                {this.state.showMessageBar && <MessageBar messageBarType={MessageBarType.success}>已刷新</MessageBar>}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    private _showModal = (): void => {\r\n        this.setState({ showModal: true });\r\n    };\r\n\r\n    private _hideModal = (): void => {\r\n        this.setState({ showModal: false });\r\n    };\r\n\r\n    private _showMessageBar = (): void => {\r\n        this.setState({ showMessageBar: true });\r\n\r\n        // Hide the MessageBar after 2 seconds\r\n        setTimeout(this._hideMessageBar, 2000);\r\n    };\r\n\r\n    private _hideMessageBar = (): void => {\r\n        this.setState({ showMessageBar: false });\r\n    };\r\n}","import { DetailsListDocumentsExample } from \"./test\";\nimport { Cmd } from './cmd'\nimport * as React from 'react';\nimport { FluentCustomizations } from '@uifabric/fluent-theme';\nimport { Customizer } from \"@uifabric/utilities\";\nclass App extends React.Component {\n  public render() {\n    return (\n      <Customizer {...FluentCustomizations}>\n        <Cmd />\n        <DetailsListDocumentsExample />\n      </Customizer>\n    );\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { initializeIcons } from '@uifabric/icons';\r\n// Register icons and pull the fonts from the default SharePoint CDN:\r\ninitializeIcons();\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n\r\n\r\n\r\n"],"sourceRoot":""}